emulate -L zsh -o err_return -o no_unset -o pushd_silent -o no_prompt_subst

local merge=1 OPTIND OPTARG
while getopts ":hm" opt; do
  case $opt in
    *h)
      print -r -- $'Usage: sync-dotfiles [{+|-}m]\nSynchronize local dotfiles with GitHub.'
      return 0
    ;;
    \?) print -r -- "sync-dotfiles: invalid option: $OPTARG" >&2;            return 1;;
    :)  print -r -- "sync-dotfiles: missing required argument: $OPTARG" >&2; return 1;;
    m)  merge=0;;
    +m) merge=1;;
  esac
done

(( OPTIND > ARGC )) || {
  print -r -- "sync-dotfiles: unexpected positional argument: ${*[OPTIND]}" >&2
  return 1
}

[[ -z ${GIT_DIR:-} ]] || {
  print -r -- "sync-dotfiles: unset GIT_DIR and retry" >&2
  return 1
}

function _sync-dotfiles-git() {
  git --git-dir=$HOME/.dotfiles-$1 "${@[2,-1]}"
}

function _sync-dotfiles-repo() {
  local -i dirty
  local s && s="$(_sync-dotfiles-git $1 status --porcelain --untracked-files=no)"
  [[ -z $s ]] || {
    dirty=1
    _sync-dotfiles-git $1 stash
  }

  _sync-dotfiles-git $1 pull --rebase --no-recurse-submodules || {
    print -Pr -- "%F{red}sync-dotfiles%f: failed to pull %Bdotfiles-$1%b" >&2
    _sync-dotfiles-git $1 status
    return 1
  }

  (( ! merge )) || ! _sync-dotfiles-git $1 remote get-url upstream &>/dev/null || {
    _sync-dotfiles-git $1 fetch upstream
    _sync-dotfiles-git $1 merge --no-edit upstream/master || {
      print -Pr -- "%F{red}sync-dotfiles%f: failed to merge upstream %Bdotfiles-$1%b" >&2
      _sync-dotfiles-git $1 status
      return 1
    }
  }

  _sync-dotfiles-git $1 push
  (( !dirty )) || _sync-dotfiles-git $1 stash pop

  _sync-dotfiles-git $1 pull --recurse-submodules
  _sync-dotfiles-git $1 submodule update --init
}

{
  {
    pushd ~

    [[ ! -d ~/.dotfiles-public ]] || _sync-dotfiles-repo public

    [[ ! -d ~/.dotfiles-private ]] || {
      [[ ! -f ${HISTFILE:-} ]] || {
        _sync-dotfiles-git private add $HISTFILE
        local s && s="$(_sync-dotfiles-git private status --porcelain $HISTFILE)"
        [[ -z $s ]] || _sync-dotfiles-git private commit -m 'fresh history' $HISTFILE
      }
      _sync-dotfiles-repo private
    }
  } always {
    popd
  }
} always {
  unfunction _sync-dotfiles-{git,repo}
}
